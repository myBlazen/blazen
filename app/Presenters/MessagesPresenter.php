<?php

declare(strict_types=1);

namespace App\Presenters;

use App\Model\GameManager;
use App\Model\UserManager;
use Nette;
use Nette\Database\Context;
use Nette\Application\AbortException;
use Nette\Http\UserStorage;

final class MessagesPresenter extends BasePresenter
{
    /**
     * @var Context
     */
    private $database;

    /**
     * @var GameManager
     */
    private $gameManager;

    /**
     * @var UserManager
     */
    private $userManager;

    /**
     * FindPresenter constructor.
     * @param Context $database
     */
    public function __construct(Context $database, GameManager $gameManager, UserManager $userManager)
    {
        parent::__construct($database, $userManager);
        $this->database = $database;
        $this->gameManager = $gameManager;
        $this->userManager = $userManager;
    }

    /**
     * @throws AbortException
     */
    protected function startup()
    {
        parent::startup();

        if (!$this->user->isLoggedIn()) {
            if ($this->user->logoutReason === UserStorage::INACTIVITY) {
                $this->flashMessage('You have been signed out due to inactivity. Please sign in again.', 'alert-info');
            }
            $this->redirect('Sign:in', ['backlink' => $this->storeRequest()]);
        }
    }
    public function beforeRender()
    {
        parent::beforeRender(); // TODO: Change the autogenerated stub
    }
}